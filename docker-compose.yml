version: "3.8"

services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./db/mongo/:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/catalog --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s

  postgres:
    container_name: postgres
    image: "postgres:14"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5433:5432"
    volumes:
      - ./db/postgres/:/var/lib/postgresql/data/
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   restart: always
  #   ports:
  #     - 1025:1025
  #     - 8025:8025

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/:/var/lib/rabbitmq
    restart: unless-stopped
    hostname: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 14250:14250
      - 14268:14268
      - 16686:16686

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/otel.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data/:/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/:/var/lib/grafana

volumes:
  mongo:
  postgres:
  prometheus:
  grafana:
  rabbitmq: